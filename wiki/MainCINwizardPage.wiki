#summary The main and the only page for the project at this time.
#labels Featured
#page represents the article in LabVIEW technical resource as it SHOULD be

= Introduction =

During the work with LabVIEW, many people need to implement pieces of code with execution times smaller than LabVIEW can provide. Sometimes, there is a need to access
some low-level I/O software library in a sophisticated way. To accomplish these tasks, software developers usually write a piece of code in C, C++, and so on. Fortunately, LabVIEW provides a good way to couple pieces of C (and C++) code with LabVIEW engine using the Code Interface Node.

While Code Interface Nodes (CINs) are a powerful way to link your C subroutines to your VIs, the process of creating a CIN can be rather complicated — not only have you to include all appropriate files, but also you need to set many compiler options correctly and set the development environment settings. If you set something wrong, you may have endless debugging problems. If you need to have many such pieces of code, it obviously can become quite a configuration and maintenance nightmare.

We present a tool designed to help in CIN creation. It is a piece of code (JScript.NET, html) that integrates into the Microsoft® Visual Studio .NET® as a regular wizard, and sets all the settings for the CINs automatically. You select a directory, give the wizard a LabVIEW-generated C file, and the tool quickly creates a compilable, runnable project.
The typical way to create a code interface node involves putting a CIN block on the diagram, wiring all inputs, instructing LabVIEW to generate “.c” file; then you compile it and instruct LabVIEW to load the result.

This project was previously published in _Labview Technical Resource_, vol 13. However, this was the last volume before the journal closed, and many libraries do not have the article. The article will be published here soon, as soon as I get it myself.

----
= Details =
== Code Interface Challenges ==

For most users, the compilation step is the most troublesome one. One must either create a makefile and work from command line, or (to preserve all the benefits of the IDE) set
numerous project settings properly. Omitting just one setting can result in a lot of time spent on debugging the code. Even if you set it right for one CIN, it is not always easy to create another CIN with the same set of settings. Plus, if you want to use some templates for all of your CINs, there is no easy way to do it as well.

Another common request is the ability to customize LabVIEW generated “.c” files on the source-code level (in other words, strip all the type definitions to a separate file.
So, we want to have a way to simplify CIN creation, to create several CINs with same settings according to sort of a template. We need to have some ability to change CIN C code at sourcecode level, have full and customizable control over CIN creation.
Here we present a Microsoft Visual Studio wizard designed to create these CIN projects. The wizard takes a “.c” file generated by LabVIEW as its input and generates a ready
project, which can be momentarily compiled and loaded to the appropriate CIN on the block diagram. This is also the most native implementation for C++ developers accustomed to the Visual Studio paradigm.